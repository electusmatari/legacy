#!/usr/bin/env python

import csv
import datetime
import pickle
import StringIO

import emcom.ftp as ftp
import evelib.api as api
import evelib.newdb as db

def main():
    members = {}
    grd = api.corp()
    gms = grd.MemberSecurity()
    for member in gms.members:
        titles = [x.titleName for x in member.titles]
        roles = [x.roleName for x in member.roles]
        if 'roleDirector' in roles:
            roles.remove('roleDirector')
            titles.append('Director')
        members.setdefault(member.name, {})
        members[member.name]['titles'] = titles
        members[member.name]['roles'] = roles
        members[member.name]['characterID'] = member.characterID
        members[member.name]['freeformtitle'] = ""
        members[member.name]['startDateTime'] = datetime.datetime.utcnow()
        members[member.name]['logonDateTime'] = datetime.datetime.utcnow()
        members[member.name]['logoffDateTime'] = datetime.datetime.utcnow()
    conn = db.connect()
    c = conn.cursor()
    gmt = grd.MemberTracking()
    current_time = datetime.datetime.utcfromtimestamp(gmt._meta.currentTime)
    utc = datetime.datetime.utcfromtimestamp
    for member in gmt.members:
        c.execute("INSERT INTO membertracking (timestamp, characterid, name, "
                  "            startdatetime, baseid, title, logondatetime, "
                  "            logoffdatetime, locationid, shiptypeid, "
                  "            roles, grantableroles) "
                  "VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)",
                  (current_time, member.characterID, member.name,
                   utc(member.startDateTime), member.baseID, 
                   member.title, utc(member.logonDateTime),
                   utc(member.logoffDateTime), member.locationID,
                   member.shipTypeID, member.roles, member.grantableRoles))
        members.setdefault(member.name, {})
        members[member.name]['characterID'] = member.characterID
        members[member.name]['freeformtitle'] = member.title
        members[member.name]['startDateTime'] = datetime.datetime.utcfromtimestamp(member.startDateTime)
        members[member.name]['logonDateTime'] = datetime.datetime.utcfromtimestamp(member.logonDateTime)
        members[member.name]['logoffDateTime'] = datetime.datetime.utcfromtimestamp(member.logoffDateTime)
    conn.commit()
    s = StringIO.StringIO()
    pickle.dump(members, s)
    s.seek(0)
    ftp.upload("grd-personnel.txt", s)

if __name__ == '__main__':
    main()
