#!/usr/bin/env python

import string
import sys

import evelib.newdb as db
import evelib.api as api
import evelib.eveapi

def main():
    name = sys.argv[1]

    apiroot = api.api()

    entityid = apiroot.eve.CharacterID(names=name).characters[0].characterID

    alliance_names = set()
    corp_names = set()
    corp_ids = set()

    for alliance in apiroot.eve.AllianceList().alliances:
        if alliance.allianceID == entityid:
            alliance_names.add(alliance.name)
            alliance_corp_ids = [corp.corporationID for corp in
                                 alliance.memberCorporations]
            corp_ids.update(alliance_corp_ids)
            for corpid in alliance_corp_ids:
                sheet = apiroot.corp.CorporationSheet(corporationID=corpid)
                corp_names.add(sheet.corporationName)
            break

    if len(alliance_names) == 0:
        try:
            sheet = apiroot.corp.CorporationSheet(corporationID=entityid)
            corp_ids.add(entityid)
            corp_names.add(sheet.corporationName)
        except evelib.eveapi.Error:
            alliance_names = [name]

    members = set()

    for corpid in corp_ids:
        sheet = apiroot.corp.CorporationSheet(corporationID=corpid)
        members.add(sheet.ceoName)

    conn = db.connect()
    c = conn.cursor()

    if len(alliance_names) > 0:
        c.execute("SELECT p.name "
                  "FROM ki_pilot p "
                  "     INNER JOIN ki_alliance a ON p.alliance_id = a.id "
                  "WHERE a.name IN (%s)"
                  % (", ".join(["%s"] * len(alliance_names)),),
                  tuple(alliance_names))
        members.update(x for (x,) in c.fetchall())

    if len(corp_names) > 0:
        c.execute("SELECT p.name "
                  "FROM ki_pilot p "
                  "     INNER JOIN ki_corp c ON p.corp_id = c.id "
                  "WHERE c.name IN (%s)"
                  % (", ".join(["%s"] * len(corp_names)),),
                  tuple(corp_names))
        members.update(x for (x,) in c.fetchall())

    members = sorted(members, key=string.lower)

    print "\n".join(members)

main()
