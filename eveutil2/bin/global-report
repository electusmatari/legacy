#!/usr/bin/env python

import evelib.newdb as db

def main():
    conn = db.connect()
    c = conn.cursor()
    interesting_systems = []
    print "[size=x-large][b]Republic Global Report[/b][/size]"
    c.execute(SQL_REPUBLIC_SYSTEMS)
    print "[size=large][b]Kills Per System[/b][/size]"
    print "(Excluding losses of militia pilots)"
    print
    print "[code]"
    print "| Kills | Perc. | System Name       | Region Name          |"
    print "+-------+-------|-------------------+----------------------+"
    for kills, percentage, systemname, regionname in c.fetchall():
        if float(percentage) >= 0.01:
            interesting_systems.append(systemname)
        print "| %5i | %4.1f%% | %-17s | %-20s |" % (
            kills, percentage*100, systemname, regionname
            )
    print "[/code]"
    print
    print "[size=large][b]Entities Per System[/b][/size]"
    print "(Excluding losses of militia pilots)"
    for systemname in interesting_systems:
        c.execute(SQL_SYSTEM_ENTITIES, (systemname,))
        print "[b]%s[/b]" % systemname
        print
        print "[code]"
        print "| Kills | Perc. | Entity Name                                        |"
        print "+-------+-------|----------------------------------------------------+"
        for kills, percentage, entityname in c.fetchall():
            print "| %5i | %4.1f%% | %-50s |" % (
                kills, percentage*100, entityname
                )
        print "[/code]"
        print
    c.execute(SQL_REPUBLIC_ENTITIES)
    print "[size=large][b]Kills Per Entity[/b][/size]"
    print "(Excluding losses of militia pilots)"
    print
    print "[code]"
    print "| Kills | Perc. | Entity Name                                        |"
    print "+-------+-------|----------------------------------------------------+"
    for kills, percentage, entityname in c.fetchall():
        print "| %5i | %4.1f%% | %-50s |" % (
            kills, percentage*100, entityname
            )
    print "[/code]"

    print
    c.execute(SQL_TOWER_ENTITIES)
    print "[size=large][b]Tower Kills by Entity[/b][/size]"
    print
    print "[code]"
    print "| Kills | Perc. | Entity Name                                        |"
    print "+-------+-------|----------------------------------------------------+"
    for kills, percentage, entityname in c.fetchall():
        print "| %5i | %4.1f%% | %-50s |" % (
            kills, percentage*100, entityname
            )
    print "[/code]"

    print
    c.execute(SQL_AMARR_KILLS)
    print "[size=large][b]Amarr Militia by Kills[/b][/size]"
    print
    print "[code]"
    print "| Kills | Perc. | Entity Name                                        |"
    print "+-------+-------|----------------------------------------------------+"
    for kills, percentage, entityname in c.fetchall():
        print "| %5i | %4.1f%% | %-50s |" % (
            kills, percentage*100, entityname
            )
    print "[/code]"

SQL_REPUBLIC_SYSTEMS = """
SELECT COUNT(*) AS c,
       COUNT(*) / SUM(COUNT(*)) OVER (),
       sn.name,
       reg.regionname
FROM killinfo ki
     INNER JOIN ki_system sn ON ki.system_id = sn.id
     INNER JOIN ccp.mapsolarsystems sys ON sn.name = sys.solarsystemname
     INNER JOIN ccp.mapregions reg ON sys.regionid = reg.regionid
WHERE NOT ki.isfake
  AND ki.faction_id IS NULL
  AND ki.date > NOW() - INTERVAL '28 days'
  AND reg.regionname in ('Heimatar', 'Metropolis', 'Molden Heath')
GROUP BY sn.name, reg.regionname
ORDER BY c desc;
"""

SQL_REPUBLIC_ENTITIES = """
SELECT COUNT(*) AS c,
       COUNT(*) / SUM(COUNT(*)) OVER (),
       entity AS name
FROM (SELECT inv.kill_id,
             COALESCE(alli.name, corp.name) AS entity
      FROM ki_involved inv
           INNER JOIN killinfo ki ON inv.kill_id = ki.id
           INNER JOIN ki_system sn ON ki.system_id = sn.id
           INNER JOIN ccp.mapsolarsystems sys ON sn.name = sys.solarsystemname
           INNER JOIN ccp.mapregions reg ON sys.regionid = reg.regionid
           LEFT JOIN ki_corp corp on inv.corp_id = corp.id
           LEFT JOIN ki_alliance alli  on inv.alliance_id = alli.id
      WHERE NOT ki.isfake
        AND ki.faction_id IS NULL
        AND NOT inv.isnpc
        AND ki.date > NOW() - INTERVAL '28 days'
        AND reg.regionname IN ('Heimatar', 'Metropolis', 'Molden Heath')
      GROUP BY kill_id, entity
     ) AS sq
GROUP BY entity
ORDER BY c DESC;
"""

SQL_TOWER_ENTITIES = """
SELECT COUNT(*) AS c,
       COUNT(*) / SUM(COUNT(*)) OVER (),
       entity AS name
FROM (SELECT inv.kill_id,
             COALESCE(alli.name, corp.name) AS entity
      FROM ki_involved inv
           INNER JOIN killinfo ki ON inv.kill_id = ki.id
           INNER JOIN ki_type destroyed ON ki.destroyed_id = destroyed.id
           INNER JOIN ki_system sn ON ki.system_id = sn.id
           INNER JOIN ccp.mapsolarsystems sys ON sn.name = sys.solarsystemname
           INNER JOIN ccp.mapregions reg ON sys.regionid = reg.regionid
           LEFT JOIN ki_corp corp on inv.corp_id = corp.id
           LEFT JOIN ki_alliance alli  on inv.alliance_id = alli.id
      WHERE NOT ki.isfake
        AND NOT inv.isnpc
        AND ki.date > NOW() - INTERVAL '28 days'
        AND destroyed.name ILIKE '%%Control Tower%%'
        AND reg.regionname IN ('Heimatar', 'Metropolis', 'Molden Heath')
      GROUP BY kill_id, entity
     ) AS sq
GROUP BY entity
ORDER BY c DESC;
"""

SQL_SYSTEM_ENTITIES = """
SELECT COUNT(*) AS c,
       COUNT(*) / SUM(COUNT(*)) OVER (),
       entity AS name
FROM (SELECT inv.kill_id,
             COALESCE(alli.name, corp.name) AS entity
      FROM ki_involved inv
           INNER JOIN killinfo ki ON inv.kill_id = ki.id
           INNER JOIN ki_system sn ON ki.system_id = sn.id
           INNER JOIN ccp.mapsolarsystems sys ON sn.name = sys.solarsystemname
           INNER JOIN ccp.mapregions reg ON sys.regionid = reg.regionid
           LEFT JOIN ki_corp corp ON inv.corp_id = corp.id
           LEFT JOIN ki_alliance alli ON inv.alliance_id = alli.id
      WHERE NOT ki.isfake
        AND ki.faction_id IS NULL
        AND NOT inv.isnpc
        AND ki.date > NOW() - INTERVAL '28 days'
        AND sys.solarsystemname = %s
      GROUP BY kill_id, entity
     ) AS sq
GROUP BY entity
ORDER BY c DESC
LIMIT 10;
"""

SQL_AMARR_KILLS = """
SELECT COUNT(*) AS c,
       COUNT(*) / SUM(COUNT(*)) OVER (),
       entity AS name
FROM (SELECT inv.kill_id,
             COALESCE(alli.name, corp.name) AS entity
      FROM ki_involved inv
           INNER JOIN ki_faction fn ON inv.faction_id = fn.id
           INNER JOIN killinfo ki ON inv.kill_id = ki.id
           INNER JOIN ki_faction kfn ON ki.faction_id = kfn.id
           LEFT JOIN ki_corp corp ON inv.corp_id = corp.id
           LEFT JOIN ki_alliance alli ON inv.alliance_id = alli.id
      WHERE NOT ki.isfake
        AND fn.name = 'Amarr Empire'
        AND kfn.name = 'Minmatar Republic'
        AND NOT inv.isnpc
        AND ki.date > NOW() - INTERVAL '28 days'
      GROUP BY kill_id, entity
     ) AS sq
GROUP BY entity
ORDER BY c DESC;
"""

SQL_AMARR_ALL = """
SELECT c.name, c.last_seen
FROM ki_corp c
     INNER JOIN ki_faction fn ON c.faction_id = fn.id
WHERE fn.name = 'Amarr Empire'
ORDER BY last_seen DESC;
"""

if __name__ == '__main__':
    main()
