#!/usr/bin/env python

import sys
import evelib.newdb as db
import datetime

def main():
    conn = db.connect()
    c = conn.cursor()
    if "-r" in sys.argv:
        c.execute(SQL_UNCONTESTED)
        state = "uncontested"
    else:
        c.execute(SQL_CONTESTED)
        state = "contested"
    data = c.fetchall()
    for faction in ['Minmatar Republic', 'Amarr Empire']:
        faction_data = [row for row in data if row[2] == faction]
        header = "%s (%i)" % (faction, len(faction_data))
        print header
        print "=" * len(header)
        for sysname, sov, occupator, ts in faction_data:
            if occupator == sov:
                print "%s, %s for %s" % (sysname, state, since(ts))
            else:
                print "%s (occupied), %s for %s" % (sysname, state, since(ts))
        print

def since(ts):
    delta = datetime.datetime.utcnow() - ts
    s = []
    if delta.days > 0:
        s.append("%s %s" % (delta.days, plural(delta.days, "day", "days")))
    hours = int(round(delta.seconds / 60.0 / 60.0))
    s.append("%s %s" % (hours, plural(hours, "hour", "hours")))
    return ", ".join(s)

def plural(n, singular, plural):
    if n == 1:
        return singular
    else:
        return plural

SQL_CONTESTED = """
SELECT name,
       sovfaction,
       COALESCE(occfaction, sovfaction) AS occupator,
       ts
FROM (SELECT sys.solarsystemname AS name,
             occfac.factionname AS occfaction,
             sovfac.factionname AS sovfaction,
             timestamp AS ts,
             MAX(timestamp) OVER (PARTITION BY sys.solarsystemname) AS maxts
      FROM historic_map m
           INNER JOIN ccp.mapsolarsystems sys
             ON m.solarsystemid = sys.solarsystemid
           INNER JOIN ccp.mapregions r
             ON sys.regionid = r.regionid
           LEFT JOIN ccp.chrfactions AS occfac
             ON m.occupyingfactionid = occfac.factionid
           LEFT JOIN ccp.chrfactions AS sovfac
             ON r.factionid = sovfac.factionid
      WHERE not m.contested
        AND r.regionname IN ('Metropolis', 'Heimatar',
                             'The Bleak Lands', 'Devoid')) AS sq
WHERE ts = maxts
  AND ts < (SELECT MAX(timestamp) FROM historic_map)
ORDER BY occupator DESC, ts ASC;
"""

SQL_UNCONTESTED = """
SELECT name,
       sovfaction,
       COALESCE(occfaction, sovfaction) AS occupator,
       ts
FROM (SELECT sys.solarsystemname AS name,
             occfac.factionname AS occfaction,
             sovfac.factionname AS sovfaction,
             timestamp AS ts,
             MAX(timestamp) OVER (PARTITION BY sys.solarsystemname) AS maxts
      FROM historic_map m
           INNER JOIN ccp.mapsolarsystems sys
             ON m.solarsystemid = sys.solarsystemid
           INNER JOIN ccp.mapregions r
             ON sys.regionid = r.regionid
           LEFT JOIN ccp.chrfactions AS occfac
             ON m.occupyingfactionid = occfac.factionid
           LEFT JOIN ccp.chrfactions AS sovfac
             ON r.factionid = sovfac.factionid
      WHERE m.contested
        AND r.regionname IN ('Metropolis', 'Heimatar',
                             'The Bleak Lands', 'Devoid')) AS sq
WHERE ts = maxts
  AND ts < (SELECT MAX(timestamp) FROM historic_map)
ORDER BY occupator DESC, ts ASC;
"""

if __name__ == '__main__':
    main()
