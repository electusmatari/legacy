#!/usr/bin/env python

import emcom.gmi as gmi
from emcom import humane

import evelib.newdb as db

MOON_MINERALS = [
    ("Atmospheric Gases", "r0"),
    ("Cadmium", "r16"),
    ("Caesium", "r32"),
    ("Chromium", "r16"),
    ("Cobalt", "r8"),
    ("Dysprosium", "r64"),
    ("Evaporite Deposits", "r0"),
    ("Hafnium", "r32"),
    ("Hydrocarbons", "r0"),
    ("Mercury", "r32"),
    ("Neodymium", "r64"),
    ("Platinum", "r16"),
    ("Promethium", "r64"),
    ("Scandium", "r8"),
    ("Silicates", "r0"),
    ("Technetium", "r32"),
    ("Thulium", "r64"),
    ("Titanium", "r8"),
    ("Tungsten", "r8"),
    ("Vanadium", "r16")
    ]

def main():
    index = gmi.current()
    profits = [(index[name].jita * 100 * 24 * 7, "%s (%s)" % (name, rarity))
               for name, rarity in MOON_MINERALS]
    profits.extend(towers(index))
    profits.sort(reverse=True)
    for profit, name in profits:
        print "%17s %s" % (humane(profit), name)

def towers(index):
    conn = db.connect()
    c = conn.cursor()
    c.execute("""
SELECT tower.typename,
       resource.typename,
       purpose.purposetext,
       tr.quantity,
       tr.minsecuritylevel,
       tr.factionid
FROM ccp.invControlTowerResources tr
     INNER JOIN ccp.invTypes tower ON tr.controlTowerTypeID = tower.typeID
     INNER JOIN ccp.invTypes resource ON tr.resourceTypeID = resource.typeID
     INNER JOIN ccp.invControlTowerResourcePurposes purpose
       ON tr.purpose = purpose.purpose;
""")
    costs = {}
    for tower, resource, purpose, qty, minsecurity, factionid in c.fetchall():
        if "Minmatar" not in tower and "Dread Guristas" not in tower and tower != 'Caldari Control Tower':
            continue
        if minsecurity is not None or factionid is not None:
            continue
        if purpose not in ('Online', 'Power', 'CPU'):
            continue
        costs.setdefault(tower, 0)
        costs[tower] += qty * index[resource].jita
    return [(cost * 24 * 7, name) for (name, cost) in costs.items()]

if __name__ == '__main__':
    main()
